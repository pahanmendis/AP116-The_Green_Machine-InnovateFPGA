#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'ocram_64k', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'OCRAM_64K_'.
 * The prefix is the slave descriptor.
 */
#define OCRAM_64K_COMPONENT_TYPE altera_avalon_onchip_memory2
#define OCRAM_64K_COMPONENT_NAME ocram_64k
#define OCRAM_64K_BASE 0x0
#define OCRAM_64K_SPAN 65536
#define OCRAM_64K_END 0xffff
#define OCRAM_64K_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define OCRAM_64K_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define OCRAM_64K_CONTENTS_INFO ""
#define OCRAM_64K_DUAL_PORT 0
#define OCRAM_64K_GUI_RAM_BLOCK_TYPE AUTO
#define OCRAM_64K_INIT_CONTENTS_FILE soc_system_ocram_64k
#define OCRAM_64K_INIT_MEM_CONTENT 1
#define OCRAM_64K_INSTANCE_ID NONE
#define OCRAM_64K_NON_DEFAULT_INIT_FILE_ENABLED 0
#define OCRAM_64K_RAM_BLOCK_TYPE AUTO
#define OCRAM_64K_READ_DURING_WRITE_MODE DONT_CARE
#define OCRAM_64K_SINGLE_CLOCK_OP 0
#define OCRAM_64K_SIZE_MULTIPLE 1
#define OCRAM_64K_SIZE_VALUE 65536
#define OCRAM_64K_WRITABLE 1
#define OCRAM_64K_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define OCRAM_64K_MEMORY_INFO_GENERATE_DAT_SYM 1
#define OCRAM_64K_MEMORY_INFO_GENERATE_HEX 1
#define OCRAM_64K_MEMORY_INFO_HAS_BYTE_LANE 0
#define OCRAM_64K_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define OCRAM_64K_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define OCRAM_64K_MEMORY_INFO_MEM_INIT_FILENAME soc_system_ocram_64k

/*
 * Macros for device 'uart_0', class 'altera_avalon_uart'
 * The macros are prefixed with 'UART_0_'.
 * The prefix is the slave descriptor.
 */
#define UART_0_COMPONENT_TYPE altera_avalon_uart
#define UART_0_COMPONENT_NAME uart_0
#define UART_0_BASE 0x0
#define UART_0_SPAN 32
#define UART_0_END 0x1f
#define UART_0_IRQ 0
#define UART_0_BAUD 38400
#define UART_0_DATA_BITS 8
#define UART_0_FIXED_BAUD 1
#define UART_0_FREQ 50000000
#define UART_0_PARITY 'N'
#define UART_0_SIM_CHAR_STREAM ""
#define UART_0_SIM_TRUE_BAUD 0
#define UART_0_STOP_BITS 1
#define UART_0_SYNC_REG_DEPTH 2
#define UART_0_USE_CTS_RTS 0
#define UART_0_USE_EOP_REGISTER 0

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x10000
#define LED_PIO_SPAN 16
#define LED_PIO_END 0x1000f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 8
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x10010
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x1001f
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 0
#define BUTTON_PIO_DATA_WIDTH 1
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE NONE
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE NONE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'switch_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'SWITCH_PIO_'.
 * The prefix is the slave descriptor.
 */
#define SWITCH_PIO_COMPONENT_TYPE altera_avalon_pio
#define SWITCH_PIO_COMPONENT_NAME switch_pio
#define SWITCH_PIO_BASE 0x10020
#define SWITCH_PIO_SPAN 16
#define SWITCH_PIO_END 0x1002f
#define SWITCH_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define SWITCH_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SWITCH_PIO_CAPTURE 0
#define SWITCH_PIO_DATA_WIDTH 4
#define SWITCH_PIO_DO_TEST_BENCH_WIRING 0
#define SWITCH_PIO_DRIVEN_SIM_VALUE 0
#define SWITCH_PIO_EDGE_TYPE NONE
#define SWITCH_PIO_FREQ 50000000
#define SWITCH_PIO_HAS_IN 1
#define SWITCH_PIO_HAS_OUT 0
#define SWITCH_PIO_HAS_TRI 0
#define SWITCH_PIO_IRQ_TYPE NONE
#define SWITCH_PIO_RESET_VALUE 0

/*
 * Macros for device 'system_id', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSTEM_ID_'.
 * The prefix is the slave descriptor.
 */
#define SYSTEM_ID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSTEM_ID_COMPONENT_NAME system_id
#define SYSTEM_ID_BASE 0x10030
#define SYSTEM_ID_SPAN 8
#define SYSTEM_ID_END 0x10037
#define SYSTEM_ID_ID 3725647376
#define SYSTEM_ID_TIMESTAMP 1655192063


#endif /* _ALTERA_HPS_0_H_ */
